[{"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\App.js":"1","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\game.js":"2","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\index.js":"3","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\Game.js":"4","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\reportWebVitals.js":"5","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\HexGrid.js":"6","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\Board.js":"7","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\CatanBoard.js":"8","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\GameBoard.js":"9","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\gameLogic.js":"10","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\Dice.js":"11"},{"size":376,"mtime":1608689764925,"results":"12","hashOfConfig":"13"},{"size":0,"mtime":1608604050967,"results":"14","hashOfConfig":"13"},{"size":500,"mtime":1608620867185,"results":"15","hashOfConfig":"13"},{"size":1118,"mtime":1608611423026,"results":"16","hashOfConfig":"13"},{"size":362,"mtime":1606617756002,"results":"17","hashOfConfig":"13"},{"size":2040,"mtime":1608664202878,"results":"18","hashOfConfig":"13"},{"size":1138,"mtime":1608625959223,"results":"19","hashOfConfig":"13"},{"size":7797,"mtime":1608750678192,"results":"20","hashOfConfig":"13"},{"size":9194,"mtime":1608753593319,"results":"21","hashOfConfig":"13"},{"size":9270,"mtime":1608749576152,"results":"22","hashOfConfig":"13"},{"size":801,"mtime":1608756330117,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"odkh2z",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\App.js",["47","48","49","50"],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\game.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\index.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\Game.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\reportWebVitals.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\HexGrid.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\Board.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\CatanBoard.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\GameBoard.js",["51","52"],"import React from 'react';\r\nimport './index.css';\r\n// import _ from 'lodash';\r\nimport board from \"./gameLogic\"\r\nimport Dice from \"./Dice\"\r\n\r\nclass Territory extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n    render() {\r\n        if (!this.props.territory_props) {\r\n            return <span>Loading...</span>;\r\n        }\r\n        let classname = \"territory territory-type-\"\r\n            + this.props.territory_props.terrainType + \" prob-\"\r\n            + this.props.territory_props.prob;\r\n\r\n        return (\r\n            <div className={classname} >\r\n                <div className=\"number-token\">\r\n                    {Object.keys(this.props.nodes).map(nodeIndex => (\r\n                        <div style={{ ...this.props.nodeHash[nodeIndex], cursor: \"pointer\" }} onClick={() => console.log(this.props.nodes[nodeIndex])}>\r\n                            <p>o</p>\r\n                        </div>\r\n                    ))}\r\n                    <p className=\"number\">{this.props.territory_props.roll}</p>\r\n                    <p className=\"probability-ticks\">{\".\".repeat(this.props.territory_props.prob)}</p>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.usedNodes = new Map()\r\n        this.state = {\r\n            board_pieces: [\r\n                board.tiles[9], board.tiles[10], board.tiles[11],\r\n                board.tiles[8], board.tiles[2], board.tiles[3], board.tiles[12],\r\n                board.tiles[7], board.tiles[1], board.tiles[0], board.tiles[4], board.tiles[13],\r\n                board.tiles[18], board.tiles[6], board.tiles[5], board.tiles[14],\r\n                board.tiles[17], board.tiles[16], board.tiles[15]\r\n            ],\r\n            nodeHash: {\r\n                \"1\": {\r\n                    position: \"absolute\", bottom: \"49px\", fontWeight: \"bold\", fontSize: \"20px\", color: \"black\", zIndex: 1,\r\n                    left: \"-5px\"\r\n                },\r\n                \"2\": {\r\n                    position: \"absolute\", bottom: \"78px\", fontWeight: \"bold\", fontSize: \"20px\", color: \"black\", zIndex: 1,\r\n                    left: \"45px\"\r\n                },\r\n                \"3\": {\r\n                    position: \"absolute\", bottom: \"49px\", fontWeight: \"bold\", fontSize: \"20px\", color: \"black\", zIndex: 1,\r\n                    left: \"96px\"\r\n                },\r\n                \"4\": {\r\n                    position: \"absolute\", bottom: \"-10px\", fontWeight: \"bold\", fontSize: \"20px\", color: \"black\", zIndex: 1,\r\n                    left: \"96px\"\r\n                },\r\n                \"5\": {\r\n                    position: \"absolute\", bottom: \"-38px\", fontWeight: \"bold\", fontSize: \"20px\", color: \"black\", zIndex: 1,\r\n                    left: \"45px\"\r\n                },\r\n                \"6\": {\r\n                    position: \"absolute\", bottom: \"-11px\", fontWeight: \"bold\", fontSize: \"20px\", color: \"black\", zIndex: 1,\r\n                    left: \"-5px\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    renderTerritory(i) {\r\n        let tile = this.state.board_pieces[i]\r\n        let returnNodes = {}\r\n        for (let nodeIndex in tile.edges) {\r\n            if (this.usedNodes.get(tile.edges[nodeIndex]) === undefined) {\r\n                returnNodes[nodeIndex] = tile.edges[nodeIndex]\r\n                this.usedNodes.set(tile.edges[nodeIndex], true)\r\n            }\r\n        }\r\n        return (\r\n            <Territory\r\n                territory_props={tile}\r\n                nodes={returnNodes}\r\n                nodeHash={this.state.nodeHash}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table\" style={{ display: \"flex\" }}>\r\n                <div className=\"board\">\r\n                    <div className=\"board-row\">\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"port port-left\" style={{ top: \"25px\" }}>?</div>\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"port port-left\">üêë</div>\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"spacer\"></div>\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"spacer\"></div>\r\n                        {this.renderTerritory(0)}\r\n                        {this.renderTerritory(1)}\r\n                        {this.renderTerritory(2)}\r\n                        <div className=\"port port-right\">‚õè</div>\r\n                        <div className=\"spacer\"></div>\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <div className=\"port port-left\">üå≤</div>\r\n                        {this.renderTerritory(3)}\r\n                        {this.renderTerritory(4)}\r\n                        {this.renderTerritory(5)}\r\n                        {this.renderTerritory(6)}\r\n                        <div className=\"spacer\"></div>\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <div className=\"spacer\"></div>\r\n                        {this.renderTerritory(7)}\r\n                        {this.renderTerritory(8)}\r\n                        {this.renderTerritory(9)}\r\n                        {this.renderTerritory(10)}\r\n                        {this.renderTerritory(11)}\r\n                        <div className=\"port port-right\">üêë</div>\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <div className=\"port port-left\">üåæ</div>\r\n                        {this.renderTerritory(12)}\r\n                        {this.renderTerritory(13)}\r\n                        {this.renderTerritory(14)}\r\n                        {this.renderTerritory(15)}\r\n                        <div className=\"spacer\"></div>\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"spacer\"></div>\r\n                        {this.renderTerritory(16)}\r\n                        {this.renderTerritory(17)}\r\n                        {this.renderTerritory(18)}\r\n                        <div className=\"port port-right\">üß±</div>\r\n                        <div className=\"spacer\"></div>\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"port port-left\">?</div>\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"port port-left\">üêë</div>\r\n                        <div className=\"spacer\"></div>\r\n                        <div className=\"spacer\"></div>\r\n                    </div>\r\n                </div>\r\n                <Dice />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// to-do: consider replacing with Lodash shuffle\r\nfunction shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nfunction piece_generator() {\r\n    const number_chits = [\r\n        { id: \"A\", number: 5, prob: 4 },\r\n        { id: \"B\", number: 2, prob: 1 },\r\n        { id: \"C\", number: 6, prob: 5 },\r\n        { id: \"D\", number: 3, prob: 2 },\r\n        { id: \"E\", number: 8, prob: 5 },\r\n        { id: \"F\", number: 10, prob: 3 },\r\n        { id: \"G\", number: 9, prob: 4 },\r\n        { id: \"H\", number: 12, prob: 1 },\r\n        { id: \"I\", number: 11, prob: 2 },\r\n        { id: \"J\", number: 4, prob: 3 },\r\n        { id: \"K\", number: 8, prob: 5 },\r\n        { id: \"L\", number: 10, prob: 3 },\r\n        { id: \"M\", number: 9, prob: 4 },\r\n        { id: \"N\", number: 4, prob: 3 },\r\n        { id: \"O\", number: 5, prob: 4 },\r\n        { id: \"P\", number: 6, prob: 5 },\r\n        { id: \"Q\", number: 3, prob: 2 },\r\n        { id: \"R\", number: 11, prob: 2 }\r\n    ];\r\n\r\n    const terrain_distribution = [\r\n        [\"wheat\", 4],\r\n        [\"forest\", 4],\r\n        [\"sheep\", 4],\r\n        [\"ore\", 3],\r\n        [\"brick\", 3]\r\n    ];\r\n\r\n    // todo: simplify this\r\n    let terrains = [];\r\n    terrain_distribution.forEach((t) => {\r\n        for (let i = 0; i < t[1]; i++) {\r\n            terrains.push(t[0]);\r\n        }\r\n    });\r\n\r\n    const numbers_shuffled = shuffle(number_chits)\r\n    const terrains_shuffled = shuffle(terrains)\r\n\r\n    const pieces = []\r\n    for (let i = 0; i < numbers_shuffled.length; i++) {\r\n        pieces[i] = numbers_shuffled[i];\r\n        pieces[i].territory_type = terrains_shuffled[i];\r\n        pieces[i].prob_display = \"‚àô\".repeat(numbers_shuffled[i].prob);\r\n    }\r\n\r\n    pieces.splice(Math.floor(Math.random() * (pieces.length + 1)), 0,\r\n        { id: \"X\", number: 0, prob: 0, territory_type: \"desert\" });\r\n\r\n    console.log(pieces)\r\n    return pieces;\r\n}\r\n\r\nexport default Board","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\gameLogic.js",["53","54","55","56","57","58","59","60"],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\Dice.js",[],{"ruleId":"61","severity":1,"message":"62","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":15},{"ruleId":"61","severity":1,"message":"66","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":24},{"ruleId":"61","severity":1,"message":"67","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":15},{"ruleId":"68","severity":1,"message":"69","line":8,"column":5,"nodeType":"70","messageId":"71","endLine":11,"endColumn":6},{"ruleId":"61","severity":1,"message":"72","line":181,"column":10,"nodeType":"63","messageId":"64","endLine":181,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":122,"column":13,"nodeType":"75","messageId":"76","endLine":122,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":123,"column":13,"nodeType":"75","messageId":"76","endLine":123,"endColumn":15},{"ruleId":"73","severity":1,"message":"78","line":124,"column":13,"nodeType":"75","messageId":"76","endLine":124,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":125,"column":13,"nodeType":"75","messageId":"76","endLine":125,"endColumn":14},{"ruleId":"73","severity":1,"message":"80","line":126,"column":13,"nodeType":"75","messageId":"76","endLine":126,"endColumn":14},{"ruleId":"73","severity":1,"message":"81","line":127,"column":13,"nodeType":"75","messageId":"76","endLine":127,"endColumn":14},{"ruleId":"73","severity":1,"message":"82","line":128,"column":13,"nodeType":"75","messageId":"76","endLine":128,"endColumn":14},{"ruleId":"73","severity":1,"message":"83","line":129,"column":13,"nodeType":"75","messageId":"76","endLine":129,"endColumn":15},"no-unused-vars","'Client' is defined but never used.","Identifier","unusedVar","'Catan' is defined but never used.","'TicTacToeBoard' is defined but never used.","'HexGrid' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'piece_generator' is defined but never used.","no-dupe-keys","Duplicate key '8'.","ObjectExpression","unexpected","Duplicate key '10'.","Duplicate key '9'.","Duplicate key '4'.","Duplicate key '5'.","Duplicate key '6'.","Duplicate key '3'.","Duplicate key '11'."]