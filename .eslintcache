[{"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\App.js":"1","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\game.js":"2","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\index.js":"3","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\Game.js":"4","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\reportWebVitals.js":"5","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\GameBoard.js":"6","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\gameLogic.js":"7","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\Dice.js":"8","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\ActiveTurn.js":"9","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\Nodes.js":"10","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\DevelopmentCardDialog.js":"11","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\ScoreBoard.js":"12","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\utils\\roadTool.js":"13","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\utils\\roadSearch.js":"14"},{"size":342,"mtime":1609912800456,"results":"15","hashOfConfig":"16"},{"size":0,"mtime":1608604050967,"results":"17","hashOfConfig":"18"},{"size":501,"mtime":1609627543464,"results":"19","hashOfConfig":"16"},{"size":11016,"mtime":1611441696712,"results":"20","hashOfConfig":"16"},{"size":362,"mtime":1606617756002,"results":"21","hashOfConfig":"16"},{"size":12152,"mtime":1611425502802,"results":"22","hashOfConfig":"16"},{"size":13455,"mtime":1611433831853,"results":"23","hashOfConfig":"16"},{"size":1000,"mtime":1609737223883,"results":"24","hashOfConfig":"16"},{"size":5879,"mtime":1611427827295,"results":"25","hashOfConfig":"16"},{"size":1910,"mtime":1611132032391,"results":"26","hashOfConfig":"16"},{"size":9501,"mtime":1611440864413,"results":"27","hashOfConfig":"16"},{"size":1361,"mtime":1609735171360,"results":"28","hashOfConfig":"16"},{"size":913,"mtime":1610941759211,"results":"29","hashOfConfig":"16"},{"size":1716,"mtime":1611130086340,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1b4srwv",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"odkh2z",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\App.js",[],["64","65"],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\game.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\index.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\Game.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\reportWebVitals.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\GameBoard.js",["66","67","68","69","70"],"import React from 'react';\r\nimport './index.css';\r\n// import _ from 'lodash';\r\nimport { board } from \"./gameLogic\"\r\nimport ActiveTurn from \"./ActiveTurn\"\r\nimport Nodes from \"./Nodes\"\r\nimport ScoreBoard from \"./ScoreBoard\"\r\nimport { roadSearch } from \"../utils/roadSearch\"\r\n\r\n// board.createBoard()\r\n\r\nlet usedNodes = new Map()\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.usedNodes = new Map()\r\n        this.state = {\r\n            board_pieces: [\r\n                board.tiles[9], board.tiles[10], board.tiles[11],\r\n                board.tiles[8], board.tiles[2], board.tiles[3], board.tiles[12],\r\n                board.tiles[7], board.tiles[1], board.tiles[0], board.tiles[4], board.tiles[13],\r\n                board.tiles[18], board.tiles[6], board.tiles[5], board.tiles[14],\r\n                board.tiles[17], board.tiles[16], board.tiles[15]\r\n            ],\r\n\r\n            renderAgain: false,\r\n            buildType: null,\r\n            currentPlayer: this.props.G.playOrder[this.props.ctx.currentPlayer],\r\n            potentialRoads: []\r\n        }\r\n        this.setBuildType = this.setBuildType.bind(this)\r\n    }\r\n\r\n\r\n\r\n    renderTerritory(i, players = null) {\r\n        // console.log(this.props.ctx, this.props.G)\r\n        let player = this.props.G.playOrder[this.props.ctx.currentPlayer]\r\n        let tile = this.state.board_pieces[i]\r\n        let returnNodes = {}\r\n        let potentialRoads = this.state.buildType === \"road\" ? roadSearch(player) : []\r\n        // console.log(\"this is potential roads\", potentialRoads, )\r\n        // console.log(player)\r\n        let roadNode = null\r\n        let newRoadNode = null\r\n        for (let nodeIndex in tile.edges) {\r\n            if (usedNodes.get(tile.edges[nodeIndex]) === undefined) {\r\n                roadNode = potentialRoads.reduce((acc,curr) => {\r\n                    if (acc){\r\n                        return acc\r\n                    } else if (curr.to === tile.edges[nodeIndex]){\r\n                        newRoadNode = (curr)\r\n                        return tile.edges[nodeIndex]\r\n                    }\r\n            },null)                \r\n                // returnNodes[nodeIndex] = { node: tile.edges[nodeIndex], color: potentialRoads.includes(tile.edges[nodeIndex]) ? player.color : \"black\" }\r\n                returnNodes[nodeIndex] = { node: tile.edges[nodeIndex], color: roadNode ? player.color : \"black\" }\r\n                usedNodes.set(tile.edges[nodeIndex], true)\r\n            }\r\n        }\r\n        return (\r\n            <Territory\r\n                buildType={this.state.buildType}\r\n                territory_props={tile}\r\n                nodes={returnNodes}\r\n                nodeHash={this.state.nodeHash}\r\n                moves={this.props.moves}\r\n                nodeAction={this.nodeAction}\r\n                newRoadNode={newRoadNode}\r\n                potentialRoads={this.state.buildType === \"road\" ?\r\n                    roadSearch(this.state.currentPlayer) : []}\r\n            />\r\n        )\r\n    }\r\n\r\n    nodeAction = (node, legalRoad) => {\r\n        switch (this.state.buildType) {\r\n            case \"road\": {\r\n                if (this.props.ctx.phase === \"initialPlacings\") {\r\n                    this.props.moves.placeRoad(node, legalRoad)\r\n                    this.setState({ ...this.state, buildType: null })\r\n                    break\r\n                } else if (this.props.ctx.phase === \"mainGame\") {\r\n                    this.props.moves.buildRoad(node, legalRoad)\r\n                    this.setState({ ...this.state, buildType: null })\r\n                    break\r\n                }\r\n            }\r\n            case \"settlement\": {\r\n                this.props.moves.placeSettlement(node)\r\n                this.setState({ ...this.state, buildType: null })\r\n                break\r\n            }\r\n            case \"city\": {\r\n                this.props.moves.buildCity(node)\r\n                this.setState({ ...this.state, buildType: null })\r\n                break\r\n            }\r\n            default: {\r\n                console.log(\"hi\", node)\r\n            }\r\n        }\r\n    }\r\n\r\n    nextTurn = () => {\r\n        this.props.events.endTurn()\r\n    }\r\n\r\n    setBuildType(value) {\r\n        this.setState({ ...this.state, buildType: this.state.buildType === value ? null : value })\r\n    }\r\n\r\n    resetMap() {\r\n        usedNodes = new Map()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table\">\r\n                <div className=\"boardAndPlayers\">\r\n                    <div className=\"board\">\r\n                        <div className=\"board-row\">\r\n                            <div className=\"spacer\"></div>\r\n                            <div className=\"port port-left\" style={{ top: \"25px\" }}>?</div>\r\n                            <div className=\"spacer\"></div>\r\n                            <div className=\"port port-left\">🐑</div>\r\n                            <div className=\"spacer\"></div>\r\n                            <div className=\"spacer\"></div>\r\n                        </div>\r\n                        <div className=\"board-row\">\r\n                            <div className=\"spacer\"></div>\r\n                            <div className=\"spacer\"></div>\r\n                            {this.renderTerritory(0)}\r\n                            {this.renderTerritory(1)}\r\n                            {this.renderTerritory(2)}\r\n                            <div className=\"port port-right\">⛏</div>\r\n                            <div className=\"spacer\"></div>\r\n                        </div>\r\n                        <div className=\"board-row\">\r\n                            <div className=\"port port-left\">🌲</div>\r\n                            {this.renderTerritory(3)}\r\n                            {this.renderTerritory(4)}\r\n                            {this.renderTerritory(5)}\r\n                            {this.renderTerritory(6)}\r\n                            <div className=\"spacer\"></div>\r\n                        </div>\r\n                        <div className=\"board-row\">\r\n                            <div className=\"spacer\"></div>\r\n                            {this.renderTerritory(7)}\r\n                            {this.renderTerritory(8)}\r\n                            {this.renderTerritory(9)}\r\n                            {this.renderTerritory(10)}\r\n                            {this.renderTerritory(11)}\r\n                            <div className=\"port port-right\">🐑</div>\r\n                        </div>\r\n                        <div className=\"board-row\">\r\n                            <div className=\"port port-left\">🌾</div>\r\n                            {this.renderTerritory(12)}\r\n                            {this.renderTerritory(13)}\r\n                            {this.renderTerritory(14)}\r\n                            {this.renderTerritory(15)}\r\n                            <div className=\"spacer\"></div>\r\n                        </div>\r\n                        <div className=\"board-row\">\r\n                            <div className=\"spacer\"></div>\r\n                            <div className=\"spacer\"></div>\r\n                            {this.renderTerritory(16)}\r\n                            {this.renderTerritory(17)}\r\n                            {this.renderTerritory(18)}\r\n                            <div className=\"port port-right\">🧱</div>\r\n                            <div className=\"spacer\"></div>\r\n                        </div>\r\n                        <div className=\"board-row\">\r\n                            <div className=\"spacer\"></div>\r\n                            <div className=\"port port-left\">?</div>\r\n                            <div className=\"spacer\"></div>\r\n                            <div className=\"port port-left\">🐑</div>\r\n                            <div className=\"spacer\"></div>\r\n                            <div className=\"spacer\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <ScoreBoard\r\n                        players={this.props.G.playOrder}\r\n                        currentPlayer={this.props.G.playOrder[this.props.ctx.currentPlayer]}\r\n                    />\r\n                </div>\r\n                <ActiveTurn\r\n                    setBuildType={this.setBuildType}\r\n                    endTurn={this.props.moves.completeTurn}\r\n                    roll={this.props.moves.roll}\r\n                    player={this.props.G.playOrder[this.props.ctx.currentPlayer]}\r\n                    buildType={this.state.buildType}\r\n                    developmentCardAction={this.props.moves.developmentCardAction}\r\n                    getDevelopmentCard={this.props.moves.getDevelopmentCard}\r\n                />\r\n                {this.resetMap()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Territory extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.territory_props) {\r\n            return <span>Loading...</span>;\r\n        }\r\n        let classname = \"territory territory-type-\"\r\n            + this.props.territory_props.terrainType + \" prob-\"\r\n            + this.props.territory_props.prob;\r\n\r\n        return (\r\n            <div className={classname} >\r\n                <div className=\"number-token\">\r\n\r\n                    <Nodes\r\n                        nodes={this.props.nodes}\r\n                        nodeAction={this.props.nodeAction}\r\n                        tile={this.props.territory_props}\r\n                        buildType={this.props.buildType}\r\n                        player={this.props.player}\r\n                        potentialRoads={this.props.potentialRoads}\r\n                        newRoadNode={this.props.newRoadNode}\r\n                    />\r\n                    <p className=\"number\">{this.props.territory_props.roll}</p>\r\n                    <p className=\"probability-ticks\">{\".\".repeat(this.props.territory_props.prob)}</p>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// to-do: consider replacing with Lodash shuffle\r\nfunction shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nfunction piece_generator() {\r\n    const number_chits = [\r\n        { id: \"A\", number: 5, prob: 4 },\r\n        { id: \"B\", number: 2, prob: 1 },\r\n        { id: \"C\", number: 6, prob: 5 },\r\n        { id: \"D\", number: 3, prob: 2 },\r\n        { id: \"E\", number: 8, prob: 5 },\r\n        { id: \"F\", number: 10, prob: 3 },\r\n        { id: \"G\", number: 9, prob: 4 },\r\n        { id: \"H\", number: 12, prob: 1 },\r\n        { id: \"I\", number: 11, prob: 2 },\r\n        { id: \"J\", number: 4, prob: 3 },\r\n        { id: \"K\", number: 8, prob: 5 },\r\n        { id: \"L\", number: 10, prob: 3 },\r\n        { id: \"M\", number: 9, prob: 4 },\r\n        { id: \"N\", number: 4, prob: 3 },\r\n        { id: \"O\", number: 5, prob: 4 },\r\n        { id: \"P\", number: 6, prob: 5 },\r\n        { id: \"Q\", number: 3, prob: 2 },\r\n        { id: \"R\", number: 11, prob: 2 }\r\n    ];\r\n\r\n    const terrain_distribution = [\r\n        [\"wheat\", 4],\r\n        [\"forest\", 4],\r\n        [\"sheep\", 4],\r\n        [\"ore\", 3],\r\n        [\"brick\", 3]\r\n    ];\r\n\r\n    // todo: simplify this\r\n    let terrains = [];\r\n    terrain_distribution.forEach((t) => {\r\n        for (let i = 0; i < t[1]; i++) {\r\n            terrains.push(t[0]);\r\n        }\r\n    });\r\n\r\n    const numbers_shuffled = shuffle(number_chits)\r\n    const terrains_shuffled = shuffle(terrains)\r\n\r\n    const pieces = []\r\n    for (let i = 0; i < numbers_shuffled.length; i++) {\r\n        pieces[i] = numbers_shuffled[i];\r\n        pieces[i].territory_type = terrains_shuffled[i];\r\n        pieces[i].prob_display = \"∙\".repeat(numbers_shuffled[i].prob);\r\n    }\r\n\r\n    pieces.splice(Math.floor(Math.random() * (pieces.length + 1)), 0,\r\n        { id: \"X\", number: 0, prob: 0, territory_type: \"desert\" });\r\n\r\n    console.log(pieces)\r\n    return pieces;\r\n}\r\n\r\nexport default Board",["71","72"],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\gameLogic.js",["73","74","75","76","77","78","79","80","81","82"],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\Dice.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\ActiveTurn.js",["83","84"],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\Nodes.js",[],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\DevelopmentCardDialog.js",["85","86"],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\components\\ScoreBoard.js",["87"],"import React, { useState } from \"react\"\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ScoreBoard = ({ players, currentPlayer }) => {\r\n\r\n    console.log(players)\r\n\r\n    return (\r\n        <table style={{ width: \"80%\" }}>\r\n            <tr>\r\n                <th><Typography variant=\"h5\">Player</Typography></th>\r\n                <th><Typography variant=\"h5\">Resources</Typography></th>\r\n                <th><Typography variant=\"h5\">DC</Typography></th>\r\n                <th><Typography variant=\"h5\">Knights</Typography></th>\r\n                <th><Typography variant=\"h5\">VP</Typography></th>\r\n            </tr>\r\n            {Object.keys(players).map(player => (\r\n                <tr>\r\n                    <td><Typography style={{ background: players[player]  === currentPlayer ? \"mediumseagreen\": \"#212529\" }} variant=\"h6\">{players[player].name}</Typography></td>\r\n                    <td><Typography variant=\"body1\">{players[player].handQuantity}</Typography></td>\r\n                    <td><Typography variant=\"body1\">{players[player].developmentCards.length}</Typography></td>\r\n                    <td><Typography variant=\"body1\">2</Typography></td>\r\n                    <td><Typography variant=\"body1\">{players[player].points}</Typography></td>\r\n                </tr>\r\n            ))}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ScoreBoard\r\n","C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\utils\\roadTool.js",[],["88","89"],"C:\\Users\\uzias\\Desktop\\lambda\\Independent Projects\\shapes\\catan\\src\\utils\\roadSearch.js",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":49,"column":50,"nodeType":"97","messageId":"98","endLine":56,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":49,"column":61,"nodeType":"97","messageId":"101","endLine":49,"endColumn":63},{"ruleId":"102","severity":1,"message":"103","line":90,"column":13,"nodeType":"104","messageId":"105","endLine":94,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":204,"column":5,"nodeType":"108","messageId":"109","endLine":206,"endColumn":6},{"ruleId":"110","severity":1,"message":"111","line":253,"column":10,"nodeType":"112","messageId":"113","endLine":253,"endColumn":25},{"ruleId":"91","replacedBy":"114"},{"ruleId":"93","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":123,"column":13,"nodeType":"118","messageId":"119","endLine":123,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":124,"column":13,"nodeType":"118","messageId":"119","endLine":124,"endColumn":15},{"ruleId":"116","severity":1,"message":"121","line":125,"column":13,"nodeType":"118","messageId":"119","endLine":125,"endColumn":14},{"ruleId":"116","severity":1,"message":"122","line":126,"column":13,"nodeType":"118","messageId":"119","endLine":126,"endColumn":14},{"ruleId":"116","severity":1,"message":"123","line":127,"column":13,"nodeType":"118","messageId":"119","endLine":127,"endColumn":14},{"ruleId":"116","severity":1,"message":"124","line":128,"column":13,"nodeType":"118","messageId":"119","endLine":128,"endColumn":14},{"ruleId":"116","severity":1,"message":"125","line":129,"column":13,"nodeType":"118","messageId":"119","endLine":129,"endColumn":14},{"ruleId":"116","severity":1,"message":"126","line":130,"column":13,"nodeType":"118","messageId":"119","endLine":130,"endColumn":15},{"ruleId":"110","severity":1,"message":"127","line":272,"column":13,"nodeType":"112","messageId":"113","endLine":272,"endColumn":21},{"ruleId":"110","severity":1,"message":"128","line":273,"column":13,"nodeType":"112","messageId":"113","endLine":273,"endColumn":21},{"ruleId":"110","severity":1,"message":"129","line":6,"column":5,"nodeType":"112","messageId":"113","endLine":6,"endColumn":21},{"ruleId":"130","severity":1,"message":"131","line":53,"column":37,"nodeType":"132","endLine":53,"endColumn":107},{"ruleId":"133","severity":1,"message":"134","line":63,"column":82,"nodeType":"135","messageId":"119","endLine":63,"endColumn":84},{"ruleId":"130","severity":1,"message":"131","line":216,"column":48,"nodeType":"132","endLine":216,"endColumn":65},{"ruleId":"110","severity":1,"message":"136","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"91","replacedBy":"137"},{"ruleId":"93","replacedBy":"138"},{"ruleId":"95","severity":1,"message":"139","line":17,"column":26,"nodeType":"97","messageId":"98","endLine":39,"endColumn":10},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'newRoadNode'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.reduce() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'piece_generator' is defined but never used.","Identifier","unusedVar",["140"],["141"],"no-dupe-keys","Duplicate key '8'.","ObjectExpression","unexpected","Duplicate key '10'.","Duplicate key '9'.","Duplicate key '4'.","Duplicate key '5'.","Duplicate key '6'.","Duplicate key '3'.","Duplicate key '11'.","'newInner' is assigned a value but never used.","'newOuter' is assigned a value but never used.","'developmentCards' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useState' is defined but never used.",["140"],["141"],"Function declared in a loop contains unsafe references to variable(s) 'currentNode', 'currentNode'.","no-global-assign","no-unsafe-negation"]